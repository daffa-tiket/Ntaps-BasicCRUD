// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/pegawai/service.go

package pegawai

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	pegawai "github.com/tiket/learn-crud/shared/dto/pegawai"
	reflect "reflect"
)

// MockViewService is a mock of ViewService interface
type MockViewService struct {
	ctrl     *gomock.Controller
	recorder *MockViewServiceMockRecorder
}

// MockViewServiceMockRecorder is the mock recorder for MockViewService
type MockViewServiceMockRecorder struct {
	mock *MockViewService
}

// NewMockViewService creates a new mock instance
func NewMockViewService(ctrl *gomock.Controller) *MockViewService {
	mock := &MockViewService{ctrl: ctrl}
	mock.recorder = &MockViewServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockViewService) EXPECT() *MockViewServiceMockRecorder {
	return m.recorder
}

// GetAllPegawai mocks base method
func (m *MockViewService) GetAllPegawai(ctx context.Context, request pegawai.GetAllPegawaiRequestDto) (*pegawai.GetAllPegawaiResponseDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPegawai", ctx, request)
	ret0, _ := ret[0].(*pegawai.GetAllPegawaiResponseDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPegawai indicates an expected call of GetAllPegawai
func (mr *MockViewServiceMockRecorder) GetAllPegawai(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPegawai", reflect.TypeOf((*MockViewService)(nil).GetAllPegawai), ctx, request)
}

// UpdatePegawai mocks base method
func (m *MockViewService) UpdatePegawai(ctx context.Context, request pegawai.UpdatePegawaiRequestDto) (*pegawai.UpdatePegawaiResponseDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePegawai", ctx, request)
	ret0, _ := ret[0].(*pegawai.UpdatePegawaiResponseDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdatePegawai indicates an expected call of UpdatePegawai
func (mr *MockViewServiceMockRecorder) UpdatePegawai(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePegawai", reflect.TypeOf((*MockViewService)(nil).UpdatePegawai), ctx, request)
}

// CreatePegawai mocks base method
func (m *MockViewService) CreatePegawai(ctx context.Context, request pegawai.CreatePegawaiRequestDto) (*pegawai.CreatePegawaiResponseDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePegawai", ctx, request)
	ret0, _ := ret[0].(*pegawai.CreatePegawaiResponseDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePegawai indicates an expected call of CreatePegawai
func (mr *MockViewServiceMockRecorder) CreatePegawai(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePegawai", reflect.TypeOf((*MockViewService)(nil).CreatePegawai), ctx, request)
}

// DeletePegawai mocks base method
func (m *MockViewService) DeletePegawai(ctx context.Context, request pegawai.DeletePegawaiRequestDto) (*pegawai.DeletePegawaiResponseDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePegawai", ctx, request)
	ret0, _ := ret[0].(*pegawai.DeletePegawaiResponseDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeletePegawai indicates an expected call of DeletePegawai
func (mr *MockViewServiceMockRecorder) DeletePegawai(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePegawai", reflect.TypeOf((*MockViewService)(nil).DeletePegawai), ctx, request)
}
