// Code generated by ntaps. DO NOT EDIT.
package di

import (
	"github.com/pkg/errors"

	persistent "github.com/tiket/TIX-HOTEL-UTILITIES-GO/persistent"

	logs "github.com/tiket/TIX-HOTEL-UTILITIES-GO/logs"

	"github.com/tiket/TIX-HOTEL-UTILITIES-GO/persistent/postgres"

	"time"

	config "github.com/tiket/learn-crud/shared/config"
)

func NewPostgres(conf *config.EnvConfiguration, logger logs.Logger) (persistent.ORM, error) {
	lft, _ := time.ParseDuration(conf.SqlConnMaxLifetime)

	opts := &persistent.Option{
		MaxIdleConnection: conf.SqlMaxIdleConnection,
		MaxOpenConnection: conf.SqlMaxOpenConnection,
		LogMode:           conf.SqlLogMode,
		ConnMaxLifetime:   lft,
	}
	instance, err := postgres.New(conf.SqlConnectionUri, opts, logger)

	if err != nil {
		return nil, errors.Wrap(err, "failed to open connection to postgres")
	}

	return instance, nil
}

func init() {
	if err := Container.Provide(NewPostgres); err != nil {
		panic(errors.Wrap(err, "failed to provide postgres"))
	}
}
